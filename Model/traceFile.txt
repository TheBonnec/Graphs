
   graph2 


      0    1    2    3    4    5    6    7    8    9    10    11    12    13    14
--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ----  ----  ----  ----  ----
 0    0    0    0    0    0    0    0    0    0    0     0     0     0     0     0
 1    0    0    0    2    0    0    2    0    0    0     0     0     0     0     0
 2    0    0    0    0    0    0    5    0    0    0     0     0     0     0     0
 3    0    0    0    0    4    0    0    0    0    0     0     0     0     0     0
 4    0    0    0    0    0    1    0    0    0    0     0     0     0     0     0
 5    0    0    0    0    0    0    0    0    0    0     0     0     0     0     9
 6    0    0    0    0    0    2    0    2    0    0     0     2     0     2     0
 7    0    0    0    0    0    0    0    0    5    0     0     0     5     0     0
 8    0    0    0    0    0    5    0    0    0    5     0     0     5     0     0
 9    0    0    0    0    0    0    0    0    0    0     9     0     9     0     0
10    0    0    0    0    0    0    0    0    0    0     0     0     2     0     0
11    0    0    0    0    0    0    0    0    0    0     0     0     0    19     0
12    0    0    0    0    0    0    0    0    0    0     0     0     0     0     5
13    0    0    0    0    0    0    0    0    0    0     0     0     0     0     1
14    0    0    0    0    0    0    0    0    0    0     0     0     0     0     0

Detecting the cycle, by using the elimination by predecessors method.
Source vertices: ['0']
Eliminating source vertices...
Remaining vertices: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
Source vertices: ['1', '2']
Eliminating source vertices...
Remaining vertices: 3 4 5 6 7 8 9 10 11 12 13 14 
Source vertices: ['3', '6']
Eliminating source vertices...
Remaining vertices: 4 5 7 8 9 10 11 12 13 14 
Source vertices: ['4', '7', '11']
Eliminating source vertices...
Remaining vertices: 5 8 9 10 12 13 14 
Source vertices: ['8', '13']
Eliminating source vertices...
Remaining vertices: 5 9 10 12 14 
Source vertices: ['5', '9']
Eliminating source vertices...
Remaining vertices: 10 12 14 
Source vertices: ['10']
Eliminating source vertices...
Remaining vertices: 12 14 
Source vertices: ['12']
Eliminating source vertices...
Remaining vertices: 14 
Source vertices: ['14']
Eliminating source vertices...
Remaining vertices: None
No cycle detected.
No negative-weight edge detected.

 ==> This graph can be a scheduling graph.


Computing the ranks of the vertices in the graph.
-- Iteration 0 --
Rank of 0 : 0
-- Iteration 1 --
Rank of 1 : 1
Rank of 2 : 1
-- Iteration 2 --
Rank of 3 : 2
Rank of 6 : 2
-- Iteration 3 --
Rank of 4 : 3
Rank of 7 : 3
Rank of 11 : 3
-- Iteration 4 --
Rank of 8 : 4
Rank of 13 : 4
-- Iteration 5 --
Rank of 5 : 5
Rank of 9 : 5
-- Iteration 6 --
Rank of 10 : 6
-- Iteration 7 --
Rank of 12 : 7
-- Iteration 8 --
Rank of 14 : 8

Calculating the earliest dates of the vertices in the graph.
We keep the maximum value for vertex 1 among earliest dates of predecessors : 0 
Earliest date of 1 : 0
We keep the maximum value for vertex 2 among earliest dates of predecessors : 0 
Earliest date of 2 : 0
We keep the maximum value for vertex 3 among earliest dates of predecessors : 2 
Earliest date of 3 : 2
We keep the maximum value for vertex 6 among earliest dates of predecessors : 2 5 
Earliest date of 6 : 5
We keep the maximum value for vertex 4 among earliest dates of predecessors : 6 
Earliest date of 4 : 6
We keep the maximum value for vertex 7 among earliest dates of predecessors : 7 
Earliest date of 7 : 7
We keep the maximum value for vertex 11 among earliest dates of predecessors : 7 
Earliest date of 11 : 7
We keep the maximum value for vertex 8 among earliest dates of predecessors : 12 
Earliest date of 8 : 12
We keep the maximum value for vertex 13 among earliest dates of predecessors : 7 26 
Earliest date of 13 : 26
We keep the maximum value for vertex 5 among earliest dates of predecessors : 7 7 17 
Earliest date of 5 : 17
We keep the maximum value for vertex 9 among earliest dates of predecessors : 17 
Earliest date of 9 : 17
We keep the maximum value for vertex 10 among earliest dates of predecessors : 26 
Earliest date of 10 : 26
We keep the maximum value for vertex 12 among earliest dates of predecessors : 12 17 26 28 
Earliest date of 12 : 28
We keep the maximum value for vertex 14 among earliest dates of predecessors : 26 33 27 
Earliest date of 14 : 33

Calculating the latest dates of the vertices in the graph.
Latest date of 14 : 33
We keep the minimum value for predecessors of vertex 14 among lastest dates calculated : 24 28 32 
Latest date of 12 : 28
We keep the minimum value for predecessors of vertex 12 among lastest dates calculated : 23 23 19 26 
Latest date of 10 : 26
We keep the minimum value for predecessors of vertex 10 among lastest dates calculated : 17 
Latest date of 5 : 24
We keep the minimum value for predecessors of vertex 5 among lastest dates calculated : 23 22 19 
Latest date of 9 : 17
We keep the minimum value for predecessors of vertex 9 among lastest dates calculated : 12 
Latest date of 8 : 12
We keep the minimum value for predecessors of vertex 8 among lastest dates calculated : 7 
Latest date of 13 : 32
We keep the minimum value for predecessors of vertex 13 among lastest dates calculated : 30 13 
Latest date of 4 : 23
We keep the minimum value for predecessors of vertex 4 among lastest dates calculated : 19 
Latest date of 7 : 7
We keep the minimum value for predecessors of vertex 7 among lastest dates calculated : 5 
Latest date of 11 : 13
We keep the minimum value for predecessors of vertex 11 among lastest dates calculated : 11 
Latest date of 3 : 19
We keep the minimum value for predecessors of vertex 3 among lastest dates calculated : 17 
Latest date of 6 : 5
We keep the minimum value for predecessors of vertex 6 among lastest dates calculated : 3 0 
Latest date of 1 : 3
We keep the minimum value for predecessors of vertex 1 among lastest dates calculated : 3 
Latest date of 2 : 0
We keep the minimum value for predecessors of vertex 2 among lastest dates calculated : 0 

Calculating the floats of the vertices in the graph.
Float of 0 : 0 - 0 = 0
Float of 1 : 3 - 0 = 3
Float of 2 : 0 - 0 = 0
Float of 3 : 19 - 2 = 17
Float of 4 : 23 - 6 = 17
Float of 5 : 24 - 17 = 7
Float of 6 : 5 - 5 = 0
Float of 7 : 7 - 7 = 0
Float of 8 : 12 - 12 = 0
Float of 9 : 17 - 17 = 0
Float of 10 : 26 - 26 = 0
Float of 11 : 13 - 7 = 6
Float of 12 : 28 - 28 = 0
Float of 13 : 32 - 26 = 6
Float of 14 : 33 - 33 = 0